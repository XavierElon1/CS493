{
	"info": {
		"_postman_id": "321564fd-999c-467e-b196-3feae0fe57d6",
		"name": "CS493Assignment2",
		"description": "Collection of tests for CS493 assignment 2\n\nGetting public Gists returns 30 Gists (you can get more via pagination, but you just need to get the first 30 and confirm that there are 30)\nConfirm that the user `wolfordj` has at least one public Gist\nConfirm that when you create a Gist the number of Gists associated to your account increases by 1\nConfirm that the contents of the Gist you created match the contents you sent\nConfirm that you are able to edit the contents of a Gist (this will require editing it and proving the edits worked)\nConfirm that you can add a star to a Gist\nConfirm that your list of Starred gists is correct\nConfirm you can remove a star from a Gist\nConfirm you can delete a Gist",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test01",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1188821f-77a5-4fec-86fc-0e3a69edd4e5",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"30 Gists returned\", function () {",
							"    pm.expect(pm.response.json()).to.have.lengthOf(30);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists/public",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"public"
					]
				},
				"description": "Test 30 gists returned"
			},
			"response": []
		},
		{
			"name": "Test02",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "30a31cbe-fbda-4a82-9c39-28d4d66fed1d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"wolfordj has at least 1 (greater than 0) gist\", function () {",
							"    pm.expect(pm.response.json().length).to.be.above(0);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/users/wolfordj/gists",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"users",
						"wolfordj",
						"gists"
					]
				},
				"description": "Test if user wolfordj has at least 1 public gist"
			},
			"response": []
		},
		{
			"name": "Test03.1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4f3b362-29d7-4b1a-8551-2f43aec329b6",
						"type": "text/javascript",
						"exec": [
							"pm.environment.set(\"initialUserGists\", pm.response.json().length);"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists"
					]
				},
				"description": "Gets the initial number of authenticated user's gists and saves it to an environment variable"
			},
			"response": []
		},
		{
			"name": "Test03.2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b25f2446-8ac5-4188-be26-0fe645154e21",
						"type": "text/javascript",
						"exec": [
							"pm.environment.set(\"newGistID\", pm.response.json()[\"id\"]);"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "494cf648-f17d-4f67-9c90-bde11bd45768",
						"type": "text/javascript",
						"exec": [
							"var str = \"\";",
							"for ( ; str.length < 16; str += Math.random().toString( 36 ).substr( 2 ) );",
							"var gistName = \"\";",
							"for ( ; gistName.length < 16; gistName += Math.random().toString( 36 ).substr( 2 ) );",
							"var gistDesc = \"\";",
							"for ( ; gistDesc.length < 16; gistDesc += Math.random().toString( 36 ).substr( 2 ) );",
							"pm.environment.set(\"nameToSend\", gistName.substr( 0, 16 ));",
							"pm.environment.set(\"contentToSend\", str.substr( 0, 16 ));",
							"pm.environment.set(\"descriptionToSend\", gistDesc.substr( 0, 16 ));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"description\": \"{{descriptionToSend}}\",\n\t\"public\": true,\n\t\"files\": {\n\t\t\"{{nameToSend}}\": {\n\t\t\t\"content\": \"{{contentToSend}}\"\n\t\t}\n\t}\n}"
				},
				"url": {
					"raw": "https://api.github.com/gists",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists"
					]
				},
				"description": "Post a new Gist to the authenticated user's Gists and save the ID to an environment variable"
			},
			"response": []
		},
		{
			"name": "Test03.3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "21b4ff46-b928-4c4f-ab0a-18079a6b478d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Adding new gist increases gist count by 1\", function () {",
							"   pm.expect(pm.response.json().length).to.equal(pm.environment.get(\"initialUserGists\") + 1);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"description\": \"TestPost\",\n\t\"public\": true,\n\t\"files\": {\n\t\t\"testPost.txt\": {\n\t\t\t\"content\": \"New posted Gist\"\n\t\t}\n\t}\n}"
				},
				"url": {
					"raw": "https://api.github.com/gists",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists"
					]
				},
				"description": "Get the list of authenticated user's Gists again after the new one has been added to confirm the gist count has increased by 1"
			},
			"response": []
		},
		{
			"name": "Test04",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "60a9e2fe-5bc7-4170-92bc-c572abec8ab9",
						"type": "text/javascript",
						"exec": [
							"pm.environment.set(\"originalContentsReceived\", pm.response.json()[\"files\"][pm.environment.get(\"nameToSend\")][\"content\"]);",
							"pm.test(\"Check that contents of the new Gist match what was sent\", function () {",
							"    pm.expect(pm.environment.get(\"originalContentsReceived\")).to.be.equal(pm.environment.get(\"contentToSend\"));",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"description\": \"TestPost\",\n\t\"public\": true,\n\t\"files\": {\n\t\t\"testPost.txt\": {\n\t\t\t\"content\": \"New posted Gist\"\n\t\t}\n\t}\n}"
				},
				"url": {
					"raw": "https://api.github.com/gists/{{newGistID}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{newGistID}}"
					]
				},
				"description": "Check to see if the contents of the new Gist match what was sent"
			},
			"response": []
		},
		{
			"name": "Test05",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a24c25b3-46a1-40c9-889d-d9353ce2d53e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Check that contents of the edited Gist are different from before\", function () {",
							"    pm.expect(pm.response.json()[\"files\"][pm.environment.get(\"nameToSend\")][\"content\"]).to.be.not.equal(pm.environment.get(\"contentToSend\"));",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "e62cd560-0909-4684-8e26-96133196e925",
						"type": "text/javascript",
						"exec": [
							"var str1 = \"\";",
							"for ( ; str1.length < 16; str1 += Math.random().toString( 36 ).substr( 2 ) );",
							"pm.environment.set(\"newContentToSend\", str1.substr( 0, 16 ));"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"files\": {\n\t\t\"{{nameToSend}}\": {\n\t\t\t\"content\": \"{{newContentToSend}}\"\n\t\t}\n\t}\n}"
				},
				"url": {
					"raw": "https://api.github.com/gists/{{newGistID}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{newGistID}}"
					]
				},
				"description": "Check to see if editing a Gist (edited the description) works"
			},
			"response": []
		},
		{
			"name": "Test06.1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b4f852ab-7e60-49e6-a95d-a55cb67d3516",
						"type": "text/javascript",
						"exec": [
							"var upperLimit = pm.response.json().length;",
							"var i;",
							"var idArray = [];",
							"for (i = upperLimit - 1; i >= 0; i--) {",
							"    idArray.push(pm.response.json()[i][\"id\"]);",
							"}",
							"pm.environment.set(\"initiallyStarredGists\", idArray);"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "21ba6010-0563-4590-8f05-64c8f165757d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists/starred",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"starred"
					]
				},
				"description": "Get the IDs of the starred gists before we star our new gists"
			},
			"response": []
		},
		{
			"name": "Test06.2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81bdfa37-17ba-4ae9-99e5-5fb701c1c172",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Check to make sure our new Gist isn't starred with a 404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "21ba6010-0563-4590-8f05-64c8f165757d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Length",
						"value": "0",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists/{{newGistID}}/star",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{newGistID}}",
						"star"
					]
				},
				"description": "Test to make sure our new Gist isn't already starred with a 404 status code check"
			},
			"response": []
		},
		{
			"name": "Test06.3",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ce32344-c38b-488e-9c0a-ba2d7297a28e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "21ba6010-0563-4590-8f05-64c8f165757d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Length",
						"value": "0"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists/{{newGistID}}/star",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{newGistID}}",
						"star"
					]
				},
				"description": "Add a star to our Gist"
			},
			"response": []
		},
		{
			"name": "Test06.4",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "979e1068-7846-4630-ad5f-13d43c64ba3d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Check to make sure our new Gist is starred with a 204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "21ba6010-0563-4590-8f05-64c8f165757d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Length",
						"value": "0",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists/{{newGistID}}/star",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{newGistID}}",
						"star"
					]
				},
				"description": "Check to make sure our new Gist has been starred after the PUT update to star it"
			},
			"response": []
		},
		{
			"name": "Test07",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b0e26c0-082f-4169-8a6f-8c75595b06f8",
						"type": "text/javascript",
						"exec": [
							"var upperLimit = pm.response.json().length;",
							"var i;",
							"var equalityCheck = true;",
							"var idArray1 = pm.environment.get(\"initiallyStarredGists\");",
							"var idArray2 = [];",
							"for (i = upperLimit - 1; i >= 0; i--) {",
							"    idArray2.push(pm.response.json()[i][\"id\"]);",
							"}",
							"for (i = 0; i < idArray1.length; i++) {",
							"    if (idArray1[i] != idArray2[i]) {",
							"        equalityCheck = false;",
							"        break;",
							"    }",
							"}",
							"if (idArray2[idArray2.length - 1] != pm.environment.get(\"newGistID\") && equalityCheck) {",
							"    equalityCheck = false;",
							"}",
							"pm.test(\"Check if the list of starred Gists is correct by comparing IDs before and after the new Gist was starred\", function () {",
							"    pm.expect(equalityCheck).to.equal(true);",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "21ba6010-0563-4590-8f05-64c8f165757d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Length",
						"value": "0",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists/starred",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"starred"
					]
				},
				"description": "Check to see if the list of starred Gists is correct by comparing it with the list of starred Gists before we starred the new Gist"
			},
			"response": []
		},
		{
			"name": "Test08.1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "87b45e56-d97c-40c3-887c-d3fea981d920",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "21ba6010-0563-4590-8f05-64c8f165757d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Length",
						"value": "0",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists/{{newGistID}}/star",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{newGistID}}",
						"star"
					]
				},
				"description": "Remove star from the new Gist before the check"
			},
			"response": []
		},
		{
			"name": "Test08.2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "afc11434-42b5-414c-8c12-47799eb1c781",
						"type": "text/javascript",
						"exec": [
							"var upperLimit = pm.response.json().length;",
							"var i;",
							"var equalityCheck = true;",
							"var idArray1 = pm.environment.get(\"initiallyStarredGists\");",
							"var idArray2 = [];",
							"for (i = upperLimit - 1; i >= 0; i--) {",
							"    idArray2.push(pm.response.json()[i][\"id\"]);",
							"}",
							"for (i = 0; i < idArray1.length; i++) {",
							"    if (idArray1[i] != idArray2[i]) {",
							"        equalityCheck = false;",
							"        break;",
							"    }",
							"}",
							"pm.test(\"Check if the list of starred Gists is correct by comparing IDs before and after the new Gist was starred and removed\", function () {",
							"    pm.expect(equalityCheck).to.equal(true);",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "21ba6010-0563-4590-8f05-64c8f165757d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Length",
						"value": "0",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists/starred",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"starred"
					]
				},
				"description": "Check the new list of starred Gists with the initial list of starred Gists. If they equal, and step 7 passed, then we can confirm the newly made gist was successfully unstarred"
			},
			"response": []
		},
		{
			"name": "Test09.1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c7902cdd-f780-44b3-aedc-73f8fc000428",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "21ba6010-0563-4590-8f05-64c8f165757d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Length",
						"value": "0",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists/{{newGistID}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{newGistID}}"
					]
				},
				"description": "Delete the new Gist"
			},
			"response": []
		},
		{
			"name": "Test09.2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c05948f-e50b-4246-954b-f8bdd03a9a33",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Check to make sure our new Gist has been deleted with a 404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "21ba6010-0563-4590-8f05-64c8f165757d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Length",
						"value": "0",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "{{OAuthGist}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.github.com/gists/{{newGistID}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"gists",
						"{{newGistID}}"
					]
				},
				"description": "Check to see if the new Gist was successfully deleted"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0959642b-9e17-4d1b-8a08-024f0de293ce",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "fcf65a8a-da01-4f20-bfbc-24bcac9a48d9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}